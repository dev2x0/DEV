name: Windows RDP with Ngrok

on:
  push:
    branches: [ main ]

env:
  NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 600
    steps:
      - name: Enable Remote Desktop
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      - name: Start RDP session with Ngrok
        run: |
          Invoke-WebRequest -Uri https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath $env:USERPROFILE
          $ngrokPath = Join-Path $env:USERPROFILE -ChildPath "ngrok.exe"
          $ngrokConfigPath = Join-Path $env:USERPROFILE -ChildPath ".ngrok2/ngrok.yml"
          New-Item -ItemType Directory -Path "$env:USERPROFILE\.ngrok2"
          Set-Content -Path $ngrokConfigPath -Value "authtoken: $env:NGROK_AUTH_TOKEN"
          Start-Process -FilePath $ngrokPath -ArgumentList "tcp 3389" -NoNewWindow
          Set-Location -Path "C:\Windows\System32"
          Start-Process -FilePath "mstsc.exe" -ArgumentList "localhost:3389" -NoNewWindow
      - name: Wait for RDP session to start
        run: |
          $time = Get-Date
          while(!(Test-NetConnection -ComputerName localhost -Port 3389 -InformationLevel Quiet)){
            Start-Sleep -Seconds 5
            $elapsed = New-TimeSpan $time $(Get-Date)
            if($elapsed.TotalMinutes -gt 30){
              throw "RDP session failed to start within 30 minutes. Aborting."
            }
          }
      - name: Wait for ngrok tunnel to start
        run: |
          $time = Get-Date
          while(!(Invoke-RestMethod http://localhost:8080 | ConvertFrom-Json).tunnels[0].public_url){
            Start-Sleep -Seconds 5
            $elapsed = New-TimeSpan $time $(Get-Date)
            if($elapsed.TotalMinutes -gt 30){
              throw "Ngrok tunnel failed to start within 30 minutes. Aborting."
            }
          }
      - name: Get public IP address
        run: |
          $ip = Invoke-RestMethod -Uri https://api.ipify.org
          Write-Output "Public IP address: $ip"
